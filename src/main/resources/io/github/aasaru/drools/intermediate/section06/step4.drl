package io.github.aasaru.drools.intermediate.section06.step4

import io.github.aasaru.drools.intermediate.section06.Agent;
import io.github.aasaru.drools.intermediate.section06.Call;
import io.github.aasaru.drools.intermediate.section06.CallService;
import io.github.aasaru.drools.intermediate.section06.AgentRepository;

import java.util.List; // TODO needed?
import java.time.LocalDate; // TODO needed?

global CallService callService;
global AgentRepository agentRepository;

rule "Connect an agent with a suitable call that has earliest start"
	dialect "java"
	when
		$agent: Agent( $agentLanguages : speaksLanguages )
		$agentLanguage: String() from $agentLanguages
		$callToPickUp: Call( this.language == $agentLanguage )
		forall (
			$suitableCall : Call( $agent.speaks(this.language) ),
			Call( this == $suitableCall, this.callStart >= $callToPickUp.callStart )
		)
	then
		callService.connectWithAgent($callToPickUp, $agent);
		delete($agent);
		delete($callToPickUp);
end

rule "Nobody at work who speaks the language"
	dialect "java"
	when
		$callToHangUp: Call( )
		not( Agent( this.speaks($callToHangUp.language) ) from agentRepository.getAgentsAtWork())
	then
		System.out.println( "There are no agents currently at work who speak '" + $callToHangUp.getLanguage() + "'. Hanging up " + $callToHangUp);
		delete($callToHangUp);
end

rule "Output queue size"
	dialect "java"
	salience 100
	when
		$queue : List() from collect( Call() )
	then
		System.out.println( "Queue size: " + $queue.size() + "");
end
