package io.github.aasaru.drools.intermediate.section06.step8

import io.github.aasaru.drools.intermediate.section06.Agent;
import io.github.aasaru.drools.intermediate.section06.Call;
import io.github.aasaru.drools.intermediate.section06.CallService;
import io.github.aasaru.drools.intermediate.section06.AgentService;

import java.util.List;

global CallService callService;
global AgentService agentService;

rule "Connect an agent with a suitable call that has earliest start"
	dialect "java"
	when
		$agent: Agent( $agentLanguages : speaksLanguages )
		$agentLanguage: String() from $agentLanguages
		$callToPickUp: Call( this.language == $agentLanguage )
		forall (
			$suitableCall : Call( $agent.speaks(this.language) ),
			Call( this == $suitableCall, this.callStart >= $callToPickUp.callStart )
		)
	then
		callService.connectWithAgent($callToPickUp, $agent);
		delete($agent);
		delete($callToPickUp);
end

rule "Nobody at work who speaks the language"
	dialect "java"
	when
		$callToHangUp: Call( )
		not( Agent( this.speaks($callToHangUp.language) ) from agentService.getAgentsAtWork())
	then
		callService.dropCall($callToHangUp, "There are no agents currently at work who speak " + $callToHangUp.getLanguage());
		delete($callToHangUp);
end

rule "Output queue size"
	dialect "java"
	salience 100
	// repeat every 1 second with initial delay of 0 seconds
	timer ( int: 0s 1s )
	when
		$queue : List() from collect( Call() )
	then
		callService.reportQueueSize( $queue.size() );
end

// two rules reporting available agent stats are removed (to reduce noise in logs)

// rule that halts the session has been removed